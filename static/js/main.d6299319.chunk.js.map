{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","useState","currentIndex","setCurrentIndex","imageSize","setImageSize","visibleImages","setVisibleImages","step","setStep","animationDuration","setAnimationDuration","inputValue","setInputValue","wrapper","useCallback","debounce","value","containerWidth","translateValue","isPrevDisabled","isNextDisabled","length","containerStylesOuter","width","transition","containerStylesInner","transform","imageStyles","height","className","style","map","img","index","src","alt","type","onClick","prevIndex","Math","min","disabled","imagesLeft","nextIndex","onChange","event","target","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d6299319.chunk.js","sourcesContent":["import React, { useCallback, useState } from 'react';\nimport './Carousel.scss';\nimport { debounce } from 'lodash';\n\ntype Props = {\n  images: string[],\n};\n\nconst Carousel: React.FC<Props> = ({ images }) => {\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [imageSize, setImageSize] = useState(130);\n  const [visibleImages, setVisibleImages] = useState(3);\n  const [step, setStep] = useState(3);\n  const [animationDuration, setAnimationDuration] = useState(1000);\n  const [inputValue, setInputValue] = useState(130);\n\n  const wrapper = useCallback(\n    debounce((value: number) => {\n      setImageSize(value);\n    }, 1000),\n    [],\n  );\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const value = +event.target.value;\n\n    setInputValue(value);\n    wrapper(value);\n  };\n\n  const handleNextClick = () => {\n    const imagesLeft = images.length - currentIndex - visibleImages;\n    const nextIndex = currentIndex + Math.min(step, imagesLeft);\n\n    setCurrentIndex(nextIndex);\n  };\n\n  const handlePrevClick = () => {\n    const prevIndex = currentIndex - Math.min(step, currentIndex);\n\n    if (prevIndex >= 0) {\n      setCurrentIndex(prevIndex);\n    }\n  };\n\n  const containerWidth = visibleImages * inputValue;\n\n  const translateValue = `translateX(-${currentIndex * imageSize}px)`;\n\n  const isPrevDisabled = currentIndex === 0;\n  const isNextDisabled = currentIndex + visibleImages === images.length;\n\n  // STYLES >>>\n  const containerStylesOuter = {\n    width: `${containerWidth}px`,\n    transition: `all ${animationDuration}ms`,\n  };\n\n  const containerStylesInner = {\n    transform: translateValue,\n    transition: `all ${animationDuration}ms`,\n  };\n\n  const imageStyles = {\n    height: `${imageSize}px`,\n    width: `${imageSize}px`,\n  };\n  // <<< STYLES\n\n  return (\n    <div className=\"Page\">\n      <div className=\"Carousel\">\n        <div className=\"outer\" style={containerStylesOuter}>\n          <div\n            className=\"container\"\n            style={containerStylesInner}\n          >\n            <ul className=\"Carousel__list\">\n              {images.map((img, index) => (\n                <li\n                  key={img}\n                  className=\"Carousel__list--item\"\n                >\n                  <img\n                    src={img}\n                    alt={`${index + 1}`}\n                    className=\"image\"\n                    style={imageStyles}\n                  />\n                </li>\n              ))}\n            </ul>\n          </div>\n        </div>\n\n      </div>\n\n      <div className=\"buttons\">\n        <button\n          className=\"button\"\n          type=\"button\"\n          onClick={handlePrevClick}\n          disabled={isPrevDisabled}\n        >\n          Prev\n        </button>\n        <button\n          className=\"button\"\n          type=\"button\"\n          onClick={handleNextClick}\n          data-cy=\"next\"\n          disabled={isNextDisabled}\n        >\n          Next\n        </button>\n      </div>\n\n      <div className=\"Input\">\n        <span className=\"Input__title\">Item Width</span>\n        <input\n          className=\"Input__field\"\n          type=\"number\"\n          value={inputValue}\n          onChange={handleInputChange}\n          step={10}\n        />\n        <span className=\"Input__title\">Frame Size</span>\n        <input\n          className=\"Input__field\"\n          type=\"number\"\n          value={visibleImages}\n          onChange={(event) => setVisibleImages(+event.target.value)}\n        />\n        <span className=\"Input__title\">Step</span>\n        <input\n          className=\"Input__field\"\n          type=\"number\"\n          value={step}\n          onChange={(event) => setStep(+event.target.value)}\n        />\n        <span className=\"Input__title\">Animation Duration</span>\n        <input\n          className=\"Input__field\"\n          type=\"number\"\n          value={animationDuration}\n          onChange={(event) => setAnimationDuration(+event.target.value)}\n          step={100}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\nconst images = [\n  './img/1.png',\n  './img/2.png',\n  './img/3.png',\n  './img/4.png',\n  './img/5.png',\n  './img/6.png',\n  './img/7.png',\n  './img/8.png',\n  './img/9.png',\n  './img/10.png',\n];\n\nexport const App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      {/* eslint-disable-next-line */}\n      <h1> Carousel with {images.length} images</h1>\n\n      <Carousel images={images} />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}